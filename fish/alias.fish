abbr -a - 'cd -'
abbr -a ... ../..
abbr -a .... ../../..
abbr -a ..... ../../../..
abbr -a ...... ../../../../..
abbr -a 1 'cd -1'
abbr -a 2 'cd -2'
abbr -a 3 'cd -3'
abbr -a 4 'cd -4'
abbr -a 5 'cd -5'
abbr -a 6 'cd -6'
abbr -a 7 'cd -7'
abbr -a 8 'cd -8'
abbr -a 9 'cd -9'
abbr -a _ 'sudo '
abbr -a bcubc 'brew upgrade --cask && brew cleanup'
abbr -a bcubo 'brew update && brew outdated --cask'
abbr -a bfu 'brew upgrade --formula'
abbr -a brewp 'brew pin'
abbr -a brewsp 'brew list --pinned'
abbr -a bubc 'brew upgrade && brew cleanup'
abbr -a bubo 'brew update && brew outdated'
abbr -a bubu 'bubo && bubc'
abbr -a bubug 'bubo && bugbc'
abbr -a bugbc 'brew upgrade --greedy && brew cleanup'
abbr -a buz 'brew uninstall --zap'
abbr -a egrep 'grep -E --color=auto '
abbr -a fgrep 'grep -F --color=auto '
abbr -a g git
abbr -a ga 'git add'
abbr -a gaa 'git add --all'
abbr -a gam 'git am'
abbr -a gama 'git am --abort'
abbr -a gamc 'git am --continue'
abbr -a gams 'git am --skip'
abbr -a gamscp 'git am --show-current-patch'
abbr -a gap 'git apply'
abbr -a gapa 'git add --patch'
abbr -a gapt 'git apply --3way'
abbr -a gau 'git add --update'
abbr -a gav 'git add --verbose'
abbr -a gb 'git branch'
abbr -a gbD 'git branch --delete --force'
abbr -a gba 'git branch --all'
abbr -a gbd 'git branch --delete'
abbr -a gbda 'git branch --no-color --merged | command grep -vE "^([+*]|\s*($(git_main_branch)|$(git_develop_branch))\s*$)" | command xargs git branch --delete 2>/dev/null'
abbr -a gbg 'git branch -vv | grep ": gone\]"'
abbr -a gbgD 'git branch --no-color -vv | grep ": gone\]" | awk '\''{print $1}'\'' | xargs git branch -D'
abbr -a gbgd 'git branch --no-color -vv | grep ": gone\]" | awk '\''{print $1}'\'' | xargs git branch -d'
abbr -a gbl 'git blame -b -w'
abbr -a gbnm 'git branch --no-merged'
abbr -a gbr 'git branch --remote'
abbr -a gbs 'git bisect'
abbr -a gbsb 'git bisect bad'
abbr -a gbsg 'git bisect good'
abbr -a gbsr 'git bisect reset'
abbr -a gbss 'git bisect start'
abbr -a gc 'git commit --verbose'
abbr -a 'gc!' 'git commit --verbose --amend'
abbr -a gca 'git commit --verbose --all'
abbr -a 'gca!' 'git commit --verbose --all --amend'
abbr -a gcam 'git commit --all --message'
abbr -a 'gcan!' 'git commit --verbose --all --no-edit --amend'
abbr -a 'gcans!' 'git commit --verbose --all --signoff --no-edit --amend'
abbr -a gcas 'git commit --all --signoff'
abbr -a gcasm 'git commit --all --signoff --message'
abbr -a gcb 'git checkout -b'
abbr -a gcd 'git checkout $(git_develop_branch)'
abbr -a gcf 'git config --list'
abbr -a gcl 'git clone --recurse-submodules'
abbr -a gclean 'git clean --interactive -d'
abbr -a gcm 'git checkout $(git_main_branch)'
abbr -a gcmsg 'git commit --message'
abbr -a 'gcn!' 'git commit --verbose --no-edit --amend'
abbr -a gco 'git checkout'
abbr -a gcor 'git checkout --recurse-submodules'
abbr -a gcount 'git shortlog --summary --numbered'
abbr -a gcp 'git cherry-pick'
abbr -a gcpa 'git cherry-pick --abort'
abbr -a gcpc 'git cherry-pick --continue'
abbr -a gcs 'git commit --gpg-sign'
abbr -a gcsm 'git commit --signoff --message'
abbr -a gcss 'git commit --gpg-sign --signoff'
abbr -a gcssm 'git commit --gpg-sign --signoff --message'
abbr -a gd 'git diff'
abbr -a gdca 'git diff --cached'
abbr -a gdct 'git describe --tags $(git rev-list --tags --max-count=1)'
abbr -a gdcw 'git diff --cached --word-diff'
abbr -a gds 'git diff --staged'
abbr -a gdt 'git diff-tree --no-commit-id --name-only -r'
abbr -a gdup 'git diff @{upstream}'
abbr -a gdw 'git diff --word-diff'
abbr -a gf 'git fetch'
abbr -a gfa 'git fetch --all --prune --jobs=10'
abbr -a gfg 'git ls-files | grep'
abbr -a gfo 'git fetch origin'
abbr -a gg 'git gui citool'
abbr -a gga 'git gui citool --amend'
abbr -a ggpull 'git pull origin "$(git_current_branch)"'
abbr -a ggpur ggu
abbr -a ggpush 'git push origin "$(git_current_branch)"'
abbr -a ggsup 'git branch --set-upstream-to=origin/$(git_current_branch)'
abbr -a ghh 'git help'
abbr -a gignore 'git update-index --assume-unchanged'
abbr -a gignored 'git ls-files -v | grep "^[[:lower:]]"'
abbr -a git-svn-dcommit-push 'git svn dcommit && git push github $(git_main_branch):svntrunk'
abbr -a gk '\gitk --all --branches &!'
abbr -a gke '\gitk --all $(git log --walk-reflogs --pretty=%h) &!'
abbr -a gl 'git pull'
abbr -a glg 'git log --stat'
abbr -a glgg 'git log --graph'
abbr -a glgga 'git log --graph --decorate --all'
abbr -a glgm 'git log --graph --max-count=10'
abbr -a glgp 'git log --stat --patch'
abbr -a glo 'git log --oneline --decorate'
abbr -a globurl 'noglob urlglobber '
abbr -a glod 'git log --graph --pretty='\''%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%ad) %C(bold blue)<%an>%Creset'\'
abbr -a glods 'git log --graph --pretty='\''%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%ad) %C(bold blue)<%an>%Creset'\'' --date=short'
abbr -a glog 'git log --oneline --decorate --graph'
abbr -a gloga 'git log --oneline --decorate --graph --all'
abbr -a glol 'git log --graph --pretty='\''%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%ar) %C(bold blue)<%an>%Creset'\'
abbr -a glola 'git log --graph --pretty='\''%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%ar) %C(bold blue)<%an>%Creset'\'' --all'
abbr -a glols 'git log --graph --pretty='\''%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%ar) %C(bold blue)<%an>%Creset'\'' --stat'
abbr -a glp _git_log_prettily
abbr -a gluc 'git pull upstream $(git_current_branch)'
abbr -a glum 'git pull upstream $(git_main_branch)'
abbr -a gm 'git merge'
abbr -a gma 'git merge --abort'
abbr -a gmom 'git merge origin/$(git_main_branch)'
abbr -a gms 'git merge --squash'
abbr -a gmtl 'git mergetool --no-prompt'
abbr -a gmtlvim 'git mergetool --no-prompt --tool=vimdiff'
abbr -a gmum 'git merge upstream/$(git_main_branch)'
abbr -a gp 'git push'
abbr -a gpd 'git push --dry-run'
abbr -a gpf 'git push --force-with-lease --force-if-includes'
abbr -a 'gpf!' 'git push --force'
abbr -a gpoat 'git push origin --all && git push origin --tags'
abbr -a gpod 'git push origin --delete'
abbr -a gpr 'git pull --rebase'
abbr -a gpristine 'git reset --hard && git clean --force -dfx'
abbr -a gpsup 'git push --set-upstream origin $(git_current_branch)'
abbr -a gpsupf 'git push --set-upstream origin $(git_current_branch) --force-with-lease --force-if-includes'
abbr -a gpu 'git push upstream'
abbr -a gpv 'git push --verbose'
abbr -a gr 'git remote'
abbr -a gra 'git remote add'
abbr -a grb 'git rebase'
abbr -a grba 'git rebase --abort'
abbr -a grbc 'git rebase --continue'
abbr -a grbd 'git rebase $(git_develop_branch)'
abbr -a grbi 'git rebase --interactive'
abbr -a grbm 'git rebase $(git_main_branch)'
abbr -a grbo 'git rebase --onto'
abbr -a grbom 'git rebase origin/$(git_main_branch)'
abbr -a grbs 'git rebase --skip'
abbr -a grep 'grep --color=auto'
abbr -a grev 'git revert'
abbr -a grh 'git reset'
abbr -a grhh 'git reset --hard'
abbr -a grm 'git rm'
abbr -a grmc 'git rm --cached'
abbr -a grmv 'git remote rename'
abbr -a groh 'git reset origin/$(git_current_branch) --hard'
abbr -a grrm 'git remote remove'
abbr -a grs 'git restore'
abbr -a grset 'git remote set-url'
abbr -a grss 'git restore --source'
abbr -a grst 'git restore --staged'
abbr -a grt 'cd "$(git rev-parse --show-toplevel || echo .)"'
abbr -a gru 'git reset --'
abbr -a grup 'git remote update'
abbr -a grv 'git remote --verbose'
abbr -a gsb 'git status --short --branch'
abbr -a gsd 'git svn dcommit'
abbr -a gsh 'git show'
abbr -a gsi 'git submodule init'
abbr -a gsps 'git show --pretty=short --show-signature'
abbr -a gsr 'git svn rebase'
abbr -a gss 'git status --short'
abbr -a gst 'git status'
abbr -a gsta 'git stash push'
abbr -a gstaa 'git stash apply'
abbr -a gstall 'git stash --all'
abbr -a gstc 'git stash clear'
abbr -a gstd 'git stash drop'
abbr -a gstl 'git stash list'
abbr -a gstp 'git stash pop'
abbr -a gsts 'git stash show --text'
abbr -a gstu 'gsta --include-untracked'
abbr -a gsu 'git submodule update'
abbr -a gsw 'git switch'
abbr -a gswc 'git switch --create'
abbr -a gswd 'git switch $(git_develop_branch)'
abbr -a gswm 'git switch $(git_main_branch)'
abbr -a gtl 'gtl(){ git tag --sort=-v:refname -n --list "${1}*" }; noglob gtl'
abbr -a gts 'git tag --sign'
abbr -a gtv 'git tag | sort -V'
abbr -a gunignore 'git update-index --no-assume-unchanged'
abbr -a gunwip 'git rev-list --max-count=1 --format="%s" HEAD | grep -q "\--wip--" && git reset HEAD~1'
abbr -a gup 'git pull --rebase'
abbr -a gupa 'git pull --rebase --autostash'
abbr -a gupav 'git pull --rebase --autostash --verbose'
abbr -a gupom 'git pull --rebase origin $(git_main_branch)'
abbr -a gupomi 'git pull --rebase=interactive origin $(git_main_branch)'
abbr -a gupv 'git pull --rebase --verbose'
abbr -a gwch 'git whatchanged -p --abbrev-commit --pretty=medium'
abbr -a gwip 'git add -A; git rm $(git ls-files --deleted) 2> /dev/null; git commit --no-verify --no-gpg-sign --message "--wip-- [skip ci]"'
abbr -a gwt 'git worktree'
abbr -a gwta 'git worktree add'
abbr -a gwtls 'git worktree list'
abbr -a gwtmv 'git worktree move'
abbr -a gwtrm 'git worktree remove'
abbr -a hidefiles 'defaults write com.apple.finder AppleShowAllFiles -bool false && killall Finder'
abbr -a md 'mkdir -p'
abbr -a nmap_check_for_firewall 'sudo nmap -sA -p1-65535 -v -T4'
abbr -a nmap_check_for_vulns 'nmap --script=vuln'
abbr -a nmap_detect_versions 'sudo nmap -sV -p1-65535 -O --osscan-guess -T4 -Pn'
abbr -a nmap_fast 'nmap -F -T5 --version-light --top-ports 300'
abbr -a nmap_fin 'sudo nmap -sF -v'
abbr -a nmap_full 'sudo nmap -sS -T4 -PE -PP -PS80,443 -PY -g 53 -A -p1-65535 -v'
abbr -a nmap_full_udp 'sudo nmap -sS -sU -T4 -A -v -PE -PS22,25,80 -PA21,23,80,443,3389 '
abbr -a nmap_full_with_scripts 'sudo nmap -sS -sU -T4 -A -v -PE -PP -PS21,22,23,25,80,113,31339 -PA80,113,443,10042 -PO --script all '
abbr -a nmap_list_interfaces 'nmap --iflist'
abbr -a nmap_open_ports 'nmap --open'
abbr -a nmap_ping_scan 'nmap -n -sP'
abbr -a nmap_ping_through_firewall 'nmap -PS -PA'
abbr -a nmap_slow 'sudo nmap -sS -v -T1'
abbr -a nmap_traceroute 'sudo nmap -sP -PE -PS22,25,80 -PA21,23,80,3389 -PU -PO --traceroute '
abbr -a nmap_web_safe_osscan 'sudo nmap -p 80,443 -O -v --osscan-guess --fuzzy '
abbr -a ofd 'open_command $PWD'
abbr -a ohmyzsh 'nvim ~/.oh-my-zsh'
abbr -a pip pip3
abbr -a rd rmdir
abbr -a run-help man
abbr -a showfiles 'defaults write com.apple.finder AppleShowAllFiles -bool true && killall Finder'
abbr -a sshconf 'nvim ~/.ssh/config'
abbr -a sst 'sudo '\''/Applications/Sublime Text.app/Contents/SharedSupport/bin/subl'\'
abbr -a st subl
abbr -a stn create_project
abbr -a stp find_project
abbr -a stt 'subl .'
abbr -a subl \''/Applications/Sublime Text.app/Contents/SharedSupport/bin/subl'\'
abbr -a tbconf 'nvim /Users/jam/Library/Application Support/MTMR/items.json'
abbr -a which-command whence
abbr -a woman eg
abbr -a zconf 'nvim ~/.zshrc'
abbr -a clip pbcopy
abbr -a r ranger
abbr r ranger-cd
abbr v nvim
abbr dcb docker compose build
abbr dcu docker compose up
abbr dcud docker compose up -d
abbr dcd docker compose down
abbr dcdv docker compose down -v
abbr proj Projects
abbr doxit docker exec -it
abbr cpp clang++
abbr python python3
abbr py python3
abbr ipy ipython3
abbr pn pnpm
abbr pnx pnpx
abbr dps docker ps
abbr dorit docker run --rm -it
abbr ef exec fish
abbr dln docker ps -l --format='{{.Names}}'
abbr cl clear
abbr act act --container-architecture linux/amd64
abbr lg lazygit
